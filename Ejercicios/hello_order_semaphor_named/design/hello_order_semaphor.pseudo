procedure main(argc, argv[])
  shared thread_count := integer(argv[1])
  shared can_greet as array of thread_count semaphores
  for thread_number := 0 to thread_count do
    can_greet[thread_number] := create_semaphore_with_open(not thread_number)
    create_thread(greet, thread_number) // thread team
  end for
  print "Hello from main thread"
end procedure

procedure greet(thread_number)
  // The thread has to wait until the semaphore gives it a signal
  wait(can_greet[thread_number])
  print "Hello from secondary thread", thread_number, " of ", thread_count
  signal(can_greet[(thread_number + 1) mod thread_count])
  // The thread gives a signal to a thread to enter into the code protected
  // by the semaphore
end procedure
