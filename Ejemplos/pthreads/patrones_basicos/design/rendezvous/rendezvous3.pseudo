procedure main:
// Crea el semaforo que revisa si a1 esta listo
  shared a1_ready := create_semaphore(0)
// Crea el semaforo que revisa si b1 esta listo
  shared b1_ready := create_semaphore(0)
// Crea el thread_a  
  create_thread(thread_a)
// Crea el thread_b  
  create_thread(thread_b)
end procedure  // Fin de main

// Lo siguiente que vamos a ver es un ejemplo de
// lo que es un deadlock o bloqueo mutuo
procedure thread_a:
// Se ejecuta a1
  statement a1
// Si se ejecuta el hilo a primero lo que va a pasar
// es que va a esperar a que el hilo b mande una se単al
// para que el hilo a continue con su ejecucion, pero
// el hilo b al mismo tiempo va a esperar una se単al por
// por parte del hilo a para que le indique que a1 fue ejecutado
// por lo que los dos van a esperar algo que nunca va a poder
// ser enviado y se quedan bloqueados mutuamente
  wait(b1_ready)
// Esta parte del codigo jamas va a ser ejecutada  
  signal(a1_ready)
  statement a2
end procedure

procedure thread_b:
// Se ejecuta b1  
  statement b1
// Si se ejecuta el hilo b primero lo que va a pasar
// es que va a esperar a que el hilo a mande una se単al
// para que el hilo b continue con su ejecucion, pero
// el hilo a al mismo tiempo va a esperar una se単al por
// por parte del hilo b para que le indique que b1 fue ejecutado
// por lo que los dos van a esperar algo que nunca va a poder
// ser enviado y se quedan bloqueados mutuamente  
  wait(a1_ready)
// Esta parte del codigo jamas va a ser ejecutada
  signal(b1_ready)
  statement b2
end procedure
